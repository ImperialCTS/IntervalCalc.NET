@model IntervalCalcWebExamples.ViewModels.Examples.ParameterViewModel

@{ 
    var range = Model.CustomRange;
    if (range == null)
    {
        var width = Math.Max(1, Math.Abs(Model.Value.Middle));
        var min = Model.Value.A - width;
        var max = Model.Value.B + width;
        range = new IntervalCalc.Interval(min, max);
    }
    var fieldname = (Html.ViewData.TemplateInfo.HtmlFieldPrefix + ".Value").Replace("[", "_").Replace("]", "_").Replace(".", "_");
}

@Html.HiddenFor(m => Model.Name)

<div class="form-group">
    <div class="control-label col-md-2"><label>@Model.Title</label></div>
    <div class="col-md-4">
        <div class="interval-slider" style="margin-top: 12px;" data-slider-min="@range.A" data-slider-max="@range.B" 
             data-slider-step="0.01" data-slider-minfield="@(fieldname)_A" data-slider-maxfield="@(fieldname)_B"></div>
    </div>
    <div class="col-md-2">
        @Html.TextBoxFor(m => m.Value.A, htmlAttributes: new { @class = "form-control text-box", type = "number", step = 0.001 })
    </div>
    <div class="col-md-1 form-control-static text-center">to</div>
    <div class="col-md-2">
        @Html.TextBoxFor(m => m.Value.B, htmlAttributes: new { @class = "form-control text-box", type = "number", step = 0.001 })
    </div>
    <div class="form-control-static col-md-1">
        @Model.Unit
    </div>
    <div class="col-md-12">
        @Html.ValidationMessageFor(m => m.Value.A, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(m => m.Value.B, "", new { @class = "text-danger" })
    </div>
</div>
